{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/video.js","webpack:///./src/render-video.js","webpack:///./src/sound.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","video","document","createElement","setAttribute","src_video","render_video_scene","THREE","Scene","render_video_width","window","innerWidth","render_video_height","innerHeight","render_video_time","render_video_camera","Camera","position","z","render_video_texture","VideoTexture","minFilter","LinearFilter","magFilter","format","RGBFormat","render_video_renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","body","appendChild","domElement","render_video_geometry","PlaneGeometry","render_video_material","ShaderMaterial","uniforms","texture","type","time","vertexShader","fragmentShader","render_video_plane","Mesh","add","render_video_animate","requestAnimationFrame","render","render_video","audioCtx","AudioContext","webkitAudioContext","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","canvas","querySelector","canvasCtx","getContext","WIDTH","width","HEIGHT","height","navigator","mediaDevices","getUserMedia","audio","then","mediaStream","srcObject","createMediaStreamSource","connect","destination","fftSize","bufferLengthAlt","frequencyBinCount","dataArrayAlt","Uint8Array","clearRect","drawAlt","getByteFrequencyData","fillStyle","fillRect","barWidth","barHeight","x","bufferLength","dataArray","draw","getByteTimeDomainData","lineWidth","strokeStyle","beginPath","sliceWidth","y","moveTo","lineTo","stroke","visualize","catch","err","console","log","message"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const video = document.createElement('video');\nvideo.setAttribute('preload', 'auto');\nvideo.setAttribute('autoplay', true);\nvideo.setAttribute('loop', true);\n\nexport default video;\n","/* global THREE */\nimport video from './video';\n\nconst scene = new THREE.Scene();\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nlet time = 0;\nconst camera = new THREE.Camera();\ncamera.position.z = 1;\n\nconst texture = new THREE.VideoTexture(video);\ntexture.minFilter = THREE.LinearFilter;\ntexture.magFilter = THREE.LinearFilter;\ntexture.format = THREE.RGBFormat;\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setSize(width, height);\ndocument.body.appendChild(renderer.domElement);\n\nconst geometry = new THREE.PlaneGeometry(width, height);\n\nconst material = new THREE.ShaderMaterial({\n  uniforms: {\n    texture: {\n      type: '1i',\n      value: texture,\n    },\n    time: {\n      type: '1f',\n      value: 0,\n    },\n  },\n  vertexShader: `\n    varying vec2 textureCoords;\n\n    void main(void) {\n      textureCoords = vec2((position + 1.0) * 0.5);\n      gl_Position = vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    uniform sampler2D texture;\n    uniform float time;\n    varying vec2 textureCoords;\n\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n\n    void main (void) {\n      vec4 color = texture2D(texture, textureCoords);\n      color.rgb += sin(textureCoords.x * 900.0) * 0.15;\n      color.rgb += sin(textureCoords.y * 900.0) * 0.15;\n      float noise2 = rand(vec2(0.6, 0.8) * sin(time * 2.0)/ 2.0);\n      gl_FragColor = mix( vec4(noise2, 0.0, 0.0, 1.0), vec4(color.r, 0.0, 0.0, 1.0), 0.8);\n    }\n  `,\n});\nconst plane = new THREE.Mesh(geometry, material);\n\nscene.add(plane);\nscene.add(camera);\n\nconst animate = () => {\n  requestAnimationFrame(animate);\n  time += 1;\n  material.uniforms.time.value = time;\n  renderer.render(scene, camera);\n};\n\nexport default animate;\n","const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\nconst analyser = audioCtx.createAnalyser();\nanalyser.minDecibels = -110;\nanalyser.maxDecibels = -20;\nanalyser.smoothingTimeConstant = 0.45;\n\n// Sound\nconst canvas = document.querySelector('.game__ui');\nconst canvasCtx = canvas.getContext('2d');\ncanvas.setAttribute('width', 180);\nconst WIDTH = canvas.width;\nconst HEIGHT = canvas.height;\n\nexport default function visualize() {\n  // рисуем бары\n  analyser.fftSize = 128;\n  const bufferLengthAlt = analyser.frequencyBinCount;\n  const dataArrayAlt = new Uint8Array(bufferLengthAlt);\n\n  canvasCtx.clearRect(0, 0, WIDTH, HEIGHT / 2);\n\n  const drawAlt = () => {\n    requestAnimationFrame(drawAlt);\n\n    analyser.getByteFrequencyData(dataArrayAlt);\n\n    canvasCtx.fillStyle = 'rgb(0, 0, 0)';\n    canvasCtx.fillRect(0, 0, WIDTH, HEIGHT / 2);\n    canvasCtx.clearRect(0, 0, WIDTH, HEIGHT / 2);\n\n    const barWidth = (WIDTH / bufferLengthAlt) * 1.5;\n    let barHeight;\n    let x = 0;\n\n    for (let i = 0; i < bufferLengthAlt; i += 1) {\n      barHeight = dataArrayAlt[i];\n\n      canvasCtx.fillStyle = `rgb(${barHeight + 200}, 255, 255)`;\n      canvasCtx.fillRect(x, (HEIGHT / 2) - (barHeight / 2), barWidth, barHeight);\n\n      x += barWidth + 1;\n    }\n  };\n  drawAlt();\n  // рисуем волну\n  analyser.fftSize = 1024;\n  const bufferLength = analyser.fftSize;\n  const dataArray = new Uint8Array(bufferLength);\n\n  canvasCtx.clearRect(0, HEIGHT / 2, WIDTH, HEIGHT);\n\n  const draw = () => {\n    requestAnimationFrame(draw);\n\n    analyser.getByteTimeDomainData(dataArray);\n\n    canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n    canvasCtx.fillRect(0, HEIGHT / 2, WIDTH, HEIGHT);\n    canvasCtx.clearRect(0, HEIGHT / 2, WIDTH, HEIGHT);\n\n\n    canvasCtx.lineWidth = 2;\n    canvasCtx.strokeStyle = 'rgb(255, 255, 255)';\n\n    canvasCtx.beginPath();\n\n    const sliceWidth = (WIDTH * 1.3) / bufferLength;\n    let x = 0;\n\n    for (let i = 0; i < bufferLength; i += 1) {\n      const v = dataArray[i] / 32.0;\n      const y = (v * (HEIGHT / 4)) - 30;\n\n      if (i === 0) {\n        canvasCtx.moveTo(x, y);\n      } else {\n        canvasCtx.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(canvas.width, canvas.height);\n    canvasCtx.stroke();\n  };\n  draw();\n}\n\nexport { audioCtx, analyser };\n","import video from './video';\nimport animate from './render-video';\nimport visualize, { audioCtx, analyser } from './sound';\n\nimport './css/style.css';\n\nnavigator.mediaDevices.getUserMedia({ audio: true, video: true })\n  .then((mediaStream) => {\n    video.srcObject = mediaStream;\n    const source = audioCtx.createMediaStreamSource(mediaStream);\n    source.connect(analyser);\n    analyser.connect(audioCtx.destination);\n    visualize();\n  })\n  .catch((err) => { console.log(`${err.name}: ${err.message}`); }); // eslint-disable-line\n\nanimate();\n"],"sourceRoot":""}